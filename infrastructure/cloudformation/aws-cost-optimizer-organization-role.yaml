AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Cost Optimizer Organization Setup - Creates all required roles for organization-wide deployment'

Parameters:
  ExternalId:
    Type: String
    Description: 'External ID for cross-account role access - Copy from the AWS Cost Optimizer setup page'
    MinLength: 6
    MaxLength: 128
    NoEcho: false
  
  TrustedAccountId:
    Type: String
    Description: 'AWS Account ID of the Cost Optimizer service (do not change)'
    Default: '504264909935'
    AllowedPattern: '[0-9]{12}'
    ConstraintDescription: 'Must be the AWS Cost Optimizer service account ID'
  
  CreateStackSetAdminRole:
    Type: String
    Description: 'Create the StackSet Administration Role (set to false if it already exists)'
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'

Conditions:
  CreateStackSetRole: !Equals [!Ref CreateStackSetAdminRole, 'true']

Resources:
  # StackSet Administration Role (required for StackSet deployment)
  AWSCloudFormationStackSetAdministrationRole:
    Type: AWS::IAM::Role
    Condition: CreateStackSetRole
    Properties:
      RoleName: 'AWSCloudFormationStackSetAdministrationRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/PowerUserAccess'
      Tags:
        - Key: 'Purpose'
          Value: 'CloudFormation StackSet Administration'
        - Key: 'Service'
          Value: 'CostOptimizer'

  OrganizationCostOptimizerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: 'OrganizationCostOptimizerRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${TrustedAccountId}:root'
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': !Ref ExternalId
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/ReadOnlyAccess'
      Policies:
        - PolicyName: 'OrganizationManagement'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              # AWS Organizations permissions for detection
              - Effect: Allow
                Action:
                  - 'organizations:DescribeOrganization'
                  - 'organizations:ListAccounts'
                  - 'organizations:ListOrganizationalUnitsForParent'
                  - 'organizations:ListRoots'
                  - 'organizations:ListChildren'
                  - 'organizations:DescribeOrganizationalUnit'
                  - 'organizations:DescribeAccount'
                Resource: '*'
              
              # CloudFormation StackSet permissions for deployment
              - Effect: Allow
                Action:
                  - 'cloudformation:CreateStackSet'
                  - 'cloudformation:UpdateStackSet'
                  - 'cloudformation:DeleteStackSet'
                  - 'cloudformation:DescribeStackSet'
                  - 'cloudformation:ListStackSets'
                  - 'cloudformation:CreateStackInstances'
                  - 'cloudformation:UpdateStackInstances'
                  - 'cloudformation:DeleteStackInstances'
                  - 'cloudformation:ListStackInstances'
                  - 'cloudformation:DescribeStackSetOperation'
                  - 'cloudformation:ListStackSetOperations'
                  - 'cloudformation:StopStackSetOperation'
                Resource: '*'
              
              # IAM permissions needed for StackSet service role
              - Effect: Allow
                Action:
                  - 'iam:CreateRole'
                  - 'iam:DeleteRole'
                  - 'iam:GetRole'
                  - 'iam:PassRole'
                  - 'iam:CreateServiceLinkedRole'
                Resource: 
                  - 'arn:aws:iam::*:role/service-role/AWSCloudFormationStackSetAdministrationRole'
                  - 'arn:aws:iam::*:role/service-role/AWSCloudFormationStackSetExecutionRole'
      Tags:
        - Key: 'Purpose'
          Value: 'AWS Cost Optimizer Organization Access'
        - Key: 'Service'
          Value: 'CostOptimizer'

Outputs:
  RoleArn:
    Description: 'ARN of the created IAM role'
    Value: !GetAtt OrganizationCostOptimizerRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-RoleArn'
  
  ExternalId:
    Description: 'External ID for assuming the role'
    Value: !Ref ExternalId
    Export:
      Name: !Sub '${AWS::StackName}-ExternalId'
  
  StackSetAdminRoleArn:
    Condition: CreateStackSetRole
    Description: 'ARN of the StackSet Administration role'
    Value: !GetAtt AWSCloudFormationStackSetAdministrationRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-StackSetAdminRoleArn'
  
  SetupInstructions:
    Description: 'Next steps for AWS Cost Optimizer setup'
    Value: !Sub |
      âœ… Roles created successfully!
      
      1. Copy the Role ARN: ${OrganizationCostOptimizerRole.Arn}
      2. Copy the External ID: ${ExternalId}
      3. Return to AWS Cost Optimizer and paste these values
      4. Continue with organization detection
      
      Note: The StackSet Administration Role has been created automatically (if it didn't exist)